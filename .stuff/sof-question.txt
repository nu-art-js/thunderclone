I try to create a common React and Typescript common library, and I run into too many difficulties in configuring the project workspace in order to develop both library and app altogether

```
project
├─ app
│  ├─ package.json
│  ├─ tsconfig.json
│  ├─ webpack.config.js
│  ├─ ... (other config files)
│  ├─ node_modules
│  │  ├─ ...
│  │  ├─ @types
│  │  │  ├─ ...
│  │  │  └─ react
│  │  └─ symlink(lib A)
│  └─ src
│     ├─ *.ts files
│     ├─ *.tsx files
│     └─ index.ts
│
└─ libA
   ├─ package.json
   ├─ tsconfig.json
   ├─ other config files
   ├─ node_modules
   │  ├─ ...
   │  └─ @types
   │     ├─ ...
   │     └─ react
   └─ src
      ├─ *.ts files
      ├─ *.tsx files
      └─ index.ts
```

* If the sources from **libA** are in the **app** everything compiles builds and run as expected.

* Under this configuration **libA** is build(tsc) successfully.

* Under this configuration **app** does not compile with the following:

```
../libA/node_modules/@types/react/index.d.ts:2963:13 - error TS2717: Subsequent property declarations must have the same type.  Property 'view' must be of type 'SVGProps<SVGViewElement>', but here has type 'SVGProps<SVGViewElement>'.
```

some Googling suggested that I should delete the react types from the node_modules in **libA**, but that would break the convenience of the development process as lib A will not compile.

-----

Frustrated, I've tried another approach..

I've simulated the linked **libA** to contain ONLY the build output folder, and the package.json file.

At this point I expected everything to compile and be just fine and indeed compile and build(tsc) went as smooth as expected, but now at runtime components in **libA** could not resolve other classes imported internally within **libA**..

So now I am even more confused...

-----

More details:

```
I develop on Mac.
npm: 6.4.1
node: 8.15.0
typescript: 3.3.3333
webpack: 4
```

tsconfig libA:

```json
{
  "compilerOptions": {
    "strict": true,
    "noUnusedLocals": true,
    "declaration": true,
    "sourceMap": true,
    "target": "es5",
    "module": "commonjs",
    "outDir": "dist",
    "moduleResolution": "node",
    "jsx": "react",
    "experimentalDecorators": true,
    "baseUrl": "src"
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
```

tsconfig app:

```
{
  "compilerOptions": {
    "strict": true,
    "noUnusedLocals": true,
    "removeComments": true,
    "sourceMap": true,
    "target": "es5",
    "module": "commonjs",
    "outDir": "dist",
    "moduleResolution": "node",
    "jsx": "react",
    "lib": [
      "es5",
      "es6",
      "es7",
      "dom"
    ],
    "baseUrl": "src"
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
```

It is safe to assume I am doing something completely wrong.. cause I am at it for almost a week on and off and cannot figure the correct configuration.. any guidance is welcome...